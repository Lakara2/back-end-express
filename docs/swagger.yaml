openapi: 3.0.0
info:
  title: Suivi de Matériel Militaire pour l'OTME
  version: 1.0.0
  description: API pour gérer le matériel militaire de l'Office de Transmission Militaire de l'Etat (OTME)
servers:
  - url: http://localhost:8080/api
paths:
  /user:
    get:
      tags:
        - user
      summary: Récupérer la liste des users
      responses:
        "200":
          description: Liste des utilisateurs récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/userOutput"
        "500":
          description: Erreur lors de la récupération des utilisateurs

    post:
      tags:
        - user
      summary: Ajouter un nouvel user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/userInput"
      responses:
        "201":
          description: Utilisateur ajouté avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/userOutput"
        "400":
          description: Erreur de validation
        "500":
          description: Erreur lors de l'ajout de l'utilisateur

  /user/{id}:
    get:
      tags:
        - user
      summary: Récupérer un user par ID
      parameters:
        - name: id
          in: path
          description: ID de l'user à récupérer
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Utilisateur récupéré avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/userOutput"
        "404":
          description: Utilisateur non trouvé
        "500":
          description: Erreur lors de la récupération de l'utilisateur

    put:
      tags:
        - user
      summary: Mettre à jour un user
      parameters:
        - name: id
          in: path
          description: ID de l'user à mettre à jour
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/userInput"
      responses:
        "200":
          description: Utilisateur mis à jour avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/userOutput"
        "400":
          description: Erreur de validation
        "404":
          description: Utilisateur non trouvé
        "500":
          description: Erreur lors de la mise à jour de l'utilisateur

    delete:
      tags:
        - user
      summary: Supprimer un user
      parameters:
        - name: id
          in: path
          description: ID de l'user à supprimer
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Utilisateur supprimé avec succès
        "404":
          description: Utilisateur non trouvé
        "500":
          description: Erreur lors de la suppression de l'utilisateur

  /equipements:
    get:
      tags:
        - equipements
      summary: Récupérer la liste des équipements
      responses:
        "200":
          description: Liste des équipements récupérée avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EquipementOutput"
        "500":
          description: Erreur lors de la récupération des équipements

    post:
      tags:
        - equipements
      summary: Ajouter un nouvel équipement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EquipementInput"
      responses:
        "201":
          description: Equipement ajouté avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EquipementOutput"
        "400":
          description: Erreur de validation
        "500":
          description: Erreur lors de l'ajout de l'équipement

  /equipements/{id}:
    get:
      tags:
        - equipements
      summary: Récupérer un équipement par ID
      parameters:
        - name: id
          in: path
          description: ID de l'équipement à récupérer
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Equipement récupéré avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EquipementOutput"
        "404":
          description: Equipement non trouvé
        "500":
          description: Erreur lors de la récupération de l'équipement

    put:
      tags:
        - equipements
      summary: Mettre à jour un équipement
      parameters:
        - name: id
          in: path
          description: ID de l'équipement à mettre à jour
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EquipementInput"
      responses:
        "200":
          description: Equipement mis à jour avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EquipementOutput"
        "400":
          description: Erreur de validation
        "404":
          description: Equipement non trouvé
        "500":
          description: Erreur lors de la mise à jour de l'équipement

    delete:
      tags:
        - equipements
      summary: Supprimer un équipement
      parameters:
        - name: id
          in: path
          description: ID de l'équipement à supprimer
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Equipement supprimé avec succès
        "404":
          description: Equipement non trouvé
        "500":
          description: Erreur lors de la suppression de l'équipement
  /equipements/{id}/type:
    get:
      tags:
        - equipements
      summary: Récupérer le type d'un équipement par ID
      parameters:
        - name: id
          in: path
          description: ID de l'équipement
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Type de l'équipement récupéré avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  status_equipement:
                    type: string
  /stocks:
    get:
      tags:
        - stocks
      summary: Récupérer la liste des stocks
      responses:
        "200":
          description: Liste des stocks récupérée avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StockOutput"
        "500":
          description: Erreur lors de la récupération des stocks

    post:
      tags:
        - stocks
      summary: Ajouter un nouvel élément au stock
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StockInput"
      responses:
        "201":
          description: Élément ajouté au stock avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StockOutput"
        "400":
          description: Erreur de validation
        "500":
          description: Erreur lors de l'ajout de l'élément au stock

  /stocks/{id}:
    get:
      tags:
        - stocks
      summary: Récupérer un élément du stock par ID
      parameters:
        - name: id
          in: path
          description: ID de l'élément du stock à récupérer
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Élément du stock récupéré avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StockOutput"
        "404":
          description: Élément du stock non trouvé
        "500":
          description: Erreur lors de la récupération de l'élément du stock

    put:
      tags:
        - stocks
      summary: Mettre à jour un élément du stock
      parameters:
        - name: id
          in: path
          description: ID de l'élément du stock à mettre à jour
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StockInput"
      responses:
        "200":
          description: Élément du stock mis à jour avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StockOutput"
        "400":
          description: Erreur de validation
        "404":
          description: Élément du stock non trouvé
        "500":
          description: Erreur lors de la mise à jour de l'élément du stock

    delete:
      tags:
        - stocks
      summary: Supprimer un élément du stock
      parameters:
        - name: id
          in: path
          description: ID de l'élément du stock à supprimer
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Élément du stock supprimé avec succès
        "404":
          description: Élément du stock non trouvé
        "500":
          description: Erreur lors de la suppression de l'élément du stock

  /commandes:
    get:
      tags:
        - commandes
      summary: Récupérer la liste des commandes
      responses:
        "200":
          description: Liste des commandes récupérée avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommandeOutput"
        "500":
          description: Erreur lors de la récupération des commandes

    post:
      tags:
        - commandes
      summary: Ajouter une nouvelle commande
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommandeInput"
      responses:
        "201":
          description: Commande ajoutée avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommandeOutput"
        "400":
          description: Erreur de validation
        "500":
          description: Erreur lors de l'ajout de la commande

  /commandes/{id}:
    get:
      tags:
        - commandes
      summary: Récupérer une commande par ID
      parameters:
        - name: id
          in: path
          description: ID de la commande à récupérer
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Commande récupérée avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommandeOutput"
        "404":
          description: Commande non trouvée
        "500":
          description: Erreur lors de la récupération de la commande

    put:
      tags:
        - commandes
      summary: Mettre à jour une commande
      parameters:
        - name: id
          in: path
          description: ID de la commande à mettre à jour
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommandeInput"
      responses:
        "200":
          description: Commande mise à jour avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CommandeOutput"
        "400":
          description: Erreur de validation
        "404":
          description: Commande non trouvée
        "500":
          description: Erreur lors de la mise à jour de la commande

    delete:
      tags:
        - commandes
      summary: Supprimer une commande
      parameters:
        - name: id
          in: path
          description: ID de la commande à supprimer
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Commande supprimée avec succès
        "404":
          description: Commande non trouvée
        "500":
          description: Erreur lors de la suppression de la commande

  /historique-utilisation:
    get:
      tags:
        - historique
      summary: Récupérer l'historique d'utilisation
      responses:
        "200":
          description: Historique d'utilisation récupéré avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HistoriqueUtilisationOutput"
        "500":
          description: Erreur lors de la récupération de l'historique d'utilisation

    post:
      tags:
        - historique
      summary: Ajouter une nouvelle entrée à l'historique d'utilisation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HistoriqueUtilisationInput"
      responses:
        "201":
          description: Entrée ajoutée à l'historique d'utilisation avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HistoriqueUtilisationOutput"
        "400":
          description: Erreur de validation
        "500":
          description: Erreur lors de l'ajout de l'entrée à l'historique d'utilisation

  /maintenance:
    get:
      tags:
        - maintenance
      summary: Récupérer la liste des opérations de maintenance
      responses:
        "200":
          description: Liste des opérations de maintenance récupérée avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaintenanceOutput"
        "500":
          description: Erreur lors de la récupération des opérations de maintenance

    post:
      tags:
        - maintenance
      summary: Ajouter une nouvelle opération de maintenance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MaintenanceInput"
      responses:
        "201":
          description: Opération de maintenance ajoutée avec succès
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaintenanceOutput"
        "400":
          description: Erreur de validation
        "500":
          description: Erreur lors de l'ajout de l'opération de maintenance

  /commandes/{id_commande}/status:
    get:
      tags:
        - commandes
      summary: Récupérer le statut d'une commande par ID
      parameters:
        - name: id_commande
          in: path
          description: ID de la commande
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Statut de la commande récupéré avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  id_stocks:
                    type: integer

  /stocks/{id}/info:
    get:
      tags:
        - stocks
      summary: Récupérer des informations sur un stock par ID
      parameters:
        - name: id
          in: path
          description: ID du stock
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Informations sur le stock récupérées avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  lieu_de_stockage:
                    type: string
                  type:
                    type: string

  /historique/{id_stocks}/info:
    get:
      tags:
        - historique
      summary: Récupérer des informations sur un historique par ID de stocks
      parameters:
        - name: id_stocks
          in: path
          description: ID des stocks
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Informations sur l'historique récupérées avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  id_equipement:
                    type: integer
                  id_user:
                    type: integer

  /maintenance/{id}/status:
    get:
      tags:
        - maintenance
      summary: Récupérer le statut d'une maintenance par ID
      parameters:
        - name: id
          in: path
          description: ID de la maintenance
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Statut de la maintenance récupéré avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
components:
  schemas:
    userInput:
      type: object
      properties:
        nom:
          type: string
        prenom:
          type: string
        grade:
          type: string
        unite:
          type: string
      required:
        - nom
        - prenom
        - grade
        - unite
    userOutput:
      type: object
      properties:
        id:
          type: integer
        nom:
          type: string
        prenom:
          type: string
        grade:
          type: string
        unite:
          type: string
      required:
        - id
        - nom
        - prenom
        - grade
        - unite
    EquipementInput:
      type: object
      properties:
        nom:
          type: string
        description:
          type: string
        pays_d_origine:
          type: string
        annee_de_fabrication:
          type: integer
        type:
          type: string
        status_equipement:
          type: string
      required:
        - nom
        - description
        - pays_d_origine
        - annee_de_fabrication
        - type
        - status_equipement

    StockInput:
      type: object
      properties:
        id_equipement:
          type: integer
        quantite:
          type: integer
        lieu_de_stockage:
          type: string
        type:
          type: string
      required:
        - id_equipement
        - quantite
        - lieu_de_stockage
        - type

    CommandeInput:
      type: object
      properties:
        user_id:
          type: integer
        date:
          type: string
          format: date
        status:
          type: string
        id_stocks:
          type: integer
      required:
        - user_id
        - date
        - status
        - id_stocks

    HistoriqueUtilisationInput:
      type: object
      properties:
        id_equipement:
          type: integer
        id_user:
          type: integer
        date_utilisation:
          type: string
          format: date-time
        description_utilisation:
          type: string
        id_stocks:
          type: integer
      required:
        - id_equipement
        - id_user
        - date_utilisation
        - description_utilisation
        - id_stocks

    MaintenanceInput:
      type: object
      properties:
        id_equipement:
          type: integer
        date_maintenance:
          type: string
          format: date
        description_maintenance:
          type: string
        cout_maintenance:
          type: number
        status:
          type: string
      required:
        - id_equipement
        - date_maintenance
        - description_maintenance
        - cout_maintenance
        - status

    EquipementOutput:
      type: object
      properties:
        id:
          type: integer
        nom:
          type: string
        description:
          type: string
        pays_d_origine:
          type: string
        annee_de_fabrication:
          type: integer
        type:
          type: string
        status_equipement:
          type: string
      required:
        - id
        - nom
        - description
        - pays_d_origine
        - annee_de_fabrication
        - type
        - status_equipement

    CommandeOutput:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        date:
          type: string
          format: date
        status:
          type: string
        id_stocks:
          type: integer
      required:
        - id
        - user_id
        - date
        - status
        - id_stocks

    StockOutput:
      type: object
      properties:
        id:
          type: integer
        id_equipement:
          type: integer
        quantite:
          type: integer
        lieu_de_stockage:
          type: string
        type:
          type: string
      required:
        - id
        - id_equipement
        - quantite
        - lieu_de_stockage
        - type

    HistoriqueUtilisationOutput:
      type: object
      properties:
        id:
          type: integer
        id_equipement:
          type: integer
        id_user:
          type: integer
        date_utilisation:
          type: string
          format: date-time
        description_utilisation:
          type: string
        id_stocks:
          type: integer
      required:
        - id
        - id_equipement
        - id_user
        - date_utilisation
        - description_utilisation
        - id_stocks

    MaintenanceOutput:
      type: object
      properties:
        id:
          type: integer
        id_equipement:
          type: integer
        date_maintenance:
          type: string
          format: date
        description_maintenance:
          type: string
        cout_maintenance:
          type: number
        status:
          type: string
      required:
        - id
        - id_equipement
        - date_maintenance
        - description_maintenance
        - cout_maintenance
        - status
